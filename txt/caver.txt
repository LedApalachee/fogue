/*    CAVER    */

Caver is a roguelike, that I'm currently working on.
It is setted in underground - mines, cavers, some other locations.
The player has to dig tunnels, build constructions, fight with enemies and more during the game.
I want this game to be not centered on the player - he is the same creature as any other one.




/*    PLAYER WILL    */

() Dig through rock
() Mine gems
() Build constructions (blocks, barricades, some aggregates and more)
() Fight with creatures
() Interact with creatures (e.g. hire a rookie from a mayor or trade with a merchant, etc.)
() Interact with environment (e.g. push levers and buttons, engrave walls and floors, etc.)
() Craft things
() Cook
() Have fun




/*    INTERACTIONS    */

All entities can interact with each other
There are always two entities that participate in an interaction:
1) active entity, that acts
2) passive entity, that reacts

Interaction
{
	type
	active entity
	passive entity
	required information // e.g. wich item will be used
}

1) an entity starts an interaction with another entity
2) the game calls proper function to operate this interaction
3) this function does proper actions




/*    BEHAVIOR    */

Behavior of creatures, items and mapobjects (and possibly other things) will be described in special structs, which will
contain various information, including flags (actually, the whole idea is based on usage of flags).
Functions that process entities' turns, will look up in this structs to decide which actions to do.
So will do, probably, functions that process interactions between entities
This approach makes construction of NPCs' brains more convenient, especially for those who'd like to edit raw files
